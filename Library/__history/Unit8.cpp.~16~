//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Unit8.h"
#include <fstream>
#include <string>
#include <vector>
#include "Unit9.h"
using namespace std;
vector<String> BookVector;
vector <String> ReadVector;

	String UserName;
	AnsiString WishList;
	String ReadList;
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm8 *Form8;
//---------------------------------------------------------------------------
__fastcall TForm8::TForm8(TComponent* Owner)
	: TForm(Owner)
{
}
//---------------------------------------------------------------------------
void __fastcall TForm8::FormActivate(TObject *Sender)
{
	UserName = Form9->StaticText1->Caption;
	WishList = UserName + "Wish.txt";
	ReadList = UserName + "Read.txt";

	BookVector.clear();
	ReadVector.clear();
	ADOTable1->First();
	ComboBox1->Clear();
	while (!ADOTable1->Eof)
	{
		ComboBox1->Items->Add(ADOTable1->FieldByName("BookName")->AsString);
		ADOTable1->Next();
    }

	fstream file1;
	fstream file2;

	ListBox1->Clear();
	ListBox2->Clear();
	try
	{
	  //Memo1->Lines->LoadFromFile(WishList);
	  //for (int i =0; i < Memo1->Lines->Count; i++)
	  //{
	   //	ListBox1->Items->Add(Memo1->Lines->Strings[i]);
	  //	BookVector.push_back(Memo1->Lines->Strings[i]);
	  //}
	  ListBox1->Items->LoadFromFile(WishList);
	  for (int i =0; i < ListBox1->Items->Count; i++)
	  {
		  BookVector.push_back(ListBox1->Items->Strings[i]);
	  }
	}
	catch(...)
	{
		ListBox1->Items->Add("There is nothing here yet");
		ListBox1->Items->Add("Try to add a book from booklist");
	}
	if (ListBox1->Items->Count == 0)
	{
		ListBox1->Items->Add("There is nothing here yet");
		ListBox1->Items->Add("Try to add a book from booklist");
	}
	Memo1->Clear();
	try
	{
		 // Memo1->Lines->LoadFromFile(ReadList);
	 // for (int i =0; i < Memo1->Lines->Count; i++)
	  //{
	  //	ListBox2->Items->Add(Memo1->Lines->Strings[i]);
	 // }
	 ListBox2->Items->LoadFromFile(ReadList);
		  for (int i =0; i < ListBox2->Items->Count; i++)
	  {
		  ReadVector.push_back(ListBox2->Items->Strings[i]);
	  }
	}
	catch(...)
	{
		ListBox2->Items->Add("Hey, you haven't read anything yet!");
		ListBox2->Items->Add("Get moving, buddy");
	}
	if (ListBox2->Items->Count == 0)
	{
		ListBox2->Items->Add("Hey, you haven't read anything yet!");
		ListBox2->Items->Add("Get moving, buddy");
	}
}
//---------------------------------------------------------------------------
void __fastcall TForm8::ComboBox1Click(TObject *Sender)
{
	if (ComboBox1->Text != "Please, choose a book")
	{
		if (ListBox1->Items->Count == 0)
		{
				   ListBox1->Items->Add(ComboBox1->Text);
		   BookVector.push_back(ComboBox1->Text);
		}
		else
		{
			 if (ListBox1->Items->Strings[0] == "There is nothing here yet")
			  {
						  ListBox1->Clear();
							 ListBox1->Items->Add(ComboBox1->Text);
						 BookVector.push_back(ComboBox1->Text);
			  }
			  else
				{
				for (int i =0; i < ListBox2->Items->Count; i++) 
						{
						   if (ComboBox1->Text == ListBox2->Items->Strings[i]) 
						   {
								if (MessageDlg("Do you want to add the book, that you've already read?", mtInformation, TMsgDlgButtons() << mbYes << mbNo, 0) == mrNo)
								{  
									return;
								}
						   }	
						}		   
				std::vector<String>::iterator iter;
				iter = BookVector.begin();
				while (iter != BookVector.end())
					{
						if (*iter == ComboBox1->Text)
						{
						   Application->MessageBox (L"Hey, you've already added this book!", L"?\_(?)_/?");

						  return;
						}

						iter++;
					}
					
					ListBox1->Items->Add(ComboBox1->Text);
					BookVector.push_back(ComboBox1->Text);
		   
				}
		}
	}
}
//---------------------------------------------------------------------------
void __fastcall TForm8::ComboBox1KeyPress(TObject *Sender, System::WideChar &Key)
{
Key = 0;
}
//---------------------------------------------------------------------------
void __fastcall TForm8::FormClose(TObject *Sender, TCloseAction &Action)
{
 try
 {
	if (ListBox2->Items->Strings[0] != "Hey, you haven't read anything yet!")
	{
		ListBox2->Items->SaveToFile(ReadList);
		ShowMessage (ListBox2->Items->Text);
	}
 }
 catch (...)
 {
		ListBox2->Items->SaveToFile(ReadList);
 }

 try
 {
	if (ListBox1->Items->Strings[0]!="There is nothing here yet")
	{
	  ListBox1->Items->SaveToFile(WishList);
	}
 }
 catch(...)
 {
    ListBox1->Items->SaveToFile(WishList);
 }
}
//---------------------------------------------------------------------------

void __fastcall TForm8::ListBox1DblClick(TObject *Sender)
{
	std::vector<String>::iterator readiter = ReadVector.begin();
	for (int i =0; i < ListBox1->Items->Count; i++)
	{
		if (ListBox1->Selected[i])
		{
			readiter = ReadVector.begin();
			while (readiter != ReadVector.end())
				{
					if (*readiter == ListBox1->Items->Strings[i])
					{
						return;
					}
					readiter++;
				}
					if (ListBox2->Items->Count != 0)
					if (ListBox2->Items->Strings[0] == "Hey, you haven't read anything yet!")
					ListBox2->Clear();
					ListBox2->Items->Add(ListBox1->Items->Strings[i]);
					ReadVector.push_back(ListBox1->Items->Strings[i]);
					ListBox1->Items->Delete(i);

		}
	}
}
//---------------------------------------------------------------------------

void __fastcall TForm8::ListBox2DblClick(TObject *Sender)
{
	for (int i =0; i < ListBox2->Items->Count; i++)
	{
	   if (ListBox2->Selected[i])
	   {
			if (MessageDlg("Do you want to delete your read book?", mtInformation, TMsgDlgButtons() << mbYes << mbNo, 0) == mrYes)
			{
			ListBox2->Items->Delete(i);
			std::vector<String>::iterator readiter = ReadVector.begin() ;
		   ReadVector.erase(readiter + i);
			}
	   }
	}


}
//---------------------------------------------------------------------------

